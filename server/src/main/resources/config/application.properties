# ----------------------------------------------------------------------------------------------------------------------
# Evidence Engine: A system for managing evidence on arbitrary scientific topics.
# Comprises an SQL database, GraphQL public API, Java app server, Java and web clients.
# Copyright Â© 2024-25 Adrian Price. All rights reserved.
#
# This file is part of Evidence Engine.
#
# Evidence Engine is free software: you can redistribute it and/or modify it under the terms of the
# GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# Evidence Engine is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License along with Evidence Engine.
# If not, see <https://www.gnu.org/licenses/>. 
# ----------------------------------------------------------------------------------------------------------------------

# APPLICATION
spring.application.name=evidence-engine-server

# SECURITY
spring.security.user.name=admin
spring.security.user.password=xxxxxxxx

# GRAPHQL
# spring.graphql.path=/graphql
spring.graphql.websocket.path=/graphql
spring.graphql.graphiql.enabled=true
# spring.graphql.graphiql.path=/graphiql
spring.graphql.schema.printer.enabled=true

# JPA
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/evidence_engine
spring.datasource.username=ee
spring.datasource.password=ee
# Hibernate-3.2+ allegedly supports automatic dialect resolution...
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDB1010Dialect
#spring.jpa.database-platform=?
# none|create|create-drop|validate|update
spring.jpa.hibernate.ddl-auto=none
# This is necessary because H2 doesn't recognise unquoted lowercase table names.
# HOWEVER, MariaDB needs sql_mode to include ANSI_QUOTES in order to accept the double quotes.
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
# Is this a viable solution to JPA lazy fetch not working?
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
# Sends unconditionally to STDOUT:
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

# JWT
jwt.server-url=http://localhost:8080
jwt.header=Authorization
jwt.prefix=Bearer
# Generate with node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
jwt.secret=1c70b9aef6770b8738372b4ae1a2a674599ac82e5d7e1ce81e46eb1e8800f639
# 4 x 60 x 60 x 1000
jwt.duration-ms=14400000
# Note: "groups", "roles" and "entitlements" are IANA-registered JWT claim names.
jwt.authority-claim=entitlements

# LOGGING
# Better to do:
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.orm.jdbc.bind=TRACE
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#logging.group.repository=io.github.demonfiddler.ee.server.repository,
#logging.level.io.github.demonfiddler.ee.server.util=DEBUG
#logging.level.io.github.demonfiddler.ee.server.repository=TRACE
#logging.level.org.springframework.boot.autoconfigure.security=DEBUG