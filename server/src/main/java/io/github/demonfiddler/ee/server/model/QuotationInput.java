/*----------------------------------------------------------------------------------------------------------------------
 * Evidence Engine: A system for managing evidence on arbitrary scientific topics.
 * Comprises an SQL database, GraphQL public API, Java app server and web client.
 * Copyright Â© 2024 Adrian Price. All rights reserved.
 *
 * This file is part of Evidence Engine.
 *
 * Evidence Engine is free software: you can redistribute it and/or modify it under the terms of the
 * GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * Evidence Engine is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License along with Evidence Engine.
 * If not, see <https://www.gnu.org/licenses/>.
 *--------------------------------------------------------------------------------------------------------------------*/

package io.github.demonfiddler.ee.server.model;

import java.net.URL;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.CompletableFuture;

import org.dataloader.DataLoader;

import graphql.schema.DataFetchingEnvironment;

import com.graphql_java_generator.annotation.GraphQLInputType;
import com.graphql_java_generator.annotation.GraphQLScalar;

import com.graphql_java_generator.annotation.GraphQLDirective;

/**
 * An input for creating or updating a quotation.
 * @author generated by graphql-java-generator
 * @see <a href=
 * "https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLInputType("QuotationInput")
@SuppressWarnings("unused")
public class QuotationInput {

	/**
	 * The quotation identifier, required if updating an existing record.
	 */
	@GraphQLScalar(fieldName = "id", graphQLTypeSimpleName = "ID", javaClass = Long.class, listDepth = 0)
	Long id;

	/**
	 * The text of the quotation.
	 */
	@GraphQLScalar(fieldName = "text", graphQLTypeSimpleName = "String", javaClass = String.class, listDepth = 0)
	String text;

	/**
	 * The identifier of the quotee.
	 */
	@GraphQLScalar(fieldName = "personId", graphQLTypeSimpleName = "Long", javaClass = Long.class, listDepth = 0)
	Long personId;

	/**
	 * The quotation date.
	 */
	@GraphQLScalar(fieldName = "date", graphQLTypeSimpleName = "Date", javaClass = java.time.LocalDate.class,
		listDepth = 0)
	java.time.LocalDate date;

	/**
	 * The quotation source.
	 */
	@GraphQLScalar(fieldName = "source", graphQLTypeSimpleName = "String", javaClass = String.class, listDepth = 0)
	String source;

	/**
	 * The URL for the quotation online.
	 */
	@GraphQLScalar(fieldName = "url", graphQLTypeSimpleName = "URL", javaClass = URL.class, listDepth = 0)
	URL url;

	/**
	 * The quotation identifier, required if updating an existing record.
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * The quotation identifier, required if updating an existing record.
	 */
	public Long getId() {
		return this.id;
	}

	/**
	 * The text of the quotation.
	 */
	public void setText(String text) {
		this.text = text;
	}

	/**
	 * The text of the quotation.
	 */
	public String getText() {
		return this.text;
	}

	/**
	 * The identifier of the quotee.
	 */
	public void setPersonId(Long personId) {
		this.personId = personId;
	}

	/**
	 * The identifier of the quotee.
	 */
	public Long getPersonId() {
		return this.personId;
	}

	/**
	 * The quotation date.
	 */
	public void setDate(java.time.LocalDate date) {
		this.date = date;
	}

	/**
	 * The quotation date.
	 */
	public java.time.LocalDate getDate() {
		return this.date;
	}

	/**
	 * The quotation source.
	 */
	public void setSource(String source) {
		this.source = source;
	}

	/**
	 * The quotation source.
	 */
	public String getSource() {
		return this.source;
	}

	/**
	 * The URL for the quotation online.
	 */
	public void setUrl(URL url) {
		this.url = url;
	}

	/**
	 * The URL for the quotation online.
	 */
	public URL getUrl() {
		return this.url;
	}

	public String toString() {
		return "QuotationInput {" //$NON-NLS-1$
			+ "id: " + this.id //$NON-NLS-1$
			+ ", " //$NON-NLS-1$
			+ "text: " + this.text //$NON-NLS-1$
			+ ", " //$NON-NLS-1$
			+ "personId: " + this.personId //$NON-NLS-1$
			+ ", " //$NON-NLS-1$
			+ "date: " + this.date //$NON-NLS-1$
			+ ", " //$NON-NLS-1$
			+ "source: " + this.source //$NON-NLS-1$
			+ ", " //$NON-NLS-1$
			+ "url: " + this.url //$NON-NLS-1$
			+ "}"; //$NON-NLS-1$
	}

	public static Builder builder() {
		return new Builder();
	}

	/**
	 * The Builder that helps building instance of this POJO. You can get an instance of this class, by calling the
	 * {@link #builder()}
	 */
	public static class Builder {

		private Long id;
		private String text;
		private Long personId;
		private java.time.LocalDate date;
		private String source;
		private URL url;

		/**
		 * The quotation identifier, required if updating an existing record.
		 */
		public Builder withId(Long idParam) {
			this.id = idParam;
			return this;
		}

		/**
		 * The text of the quotation.
		 */
		public Builder withText(String textParam) {
			this.text = textParam;
			return this;
		}

		/**
		 * The identifier of the quotee.
		 */
		public Builder withPersonId(Long personIdParam) {
			this.personId = personIdParam;
			return this;
		}

		/**
		 * The quotation date.
		 */
		public Builder withDate(java.time.LocalDate dateParam) {
			this.date = dateParam;
			return this;
		}

		/**
		 * The quotation source.
		 */
		public Builder withSource(String sourceParam) {
			this.source = sourceParam;
			return this;
		}

		/**
		 * The URL for the quotation online.
		 */
		public Builder withUrl(URL urlParam) {
			this.url = urlParam;
			return this;
		}

		public QuotationInput build() {
			QuotationInput _object = new QuotationInput();
			_object.setId(this.id);
			_object.setText(this.text);
			_object.setPersonId(this.personId);
			_object.setDate(this.date);
			_object.setSource(this.source);
			_object.setUrl(this.url);
			return _object;
		}

	}

}
