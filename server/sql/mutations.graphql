# These mutations use fragments defined in fragments.graphql

mutation {
  createClaim 
 	(
    claim: {
      text: "Test claim"
      date: "2024-11-18"
      notes: "Testing the mutation create claim API"
    }
  )
  {
    id
    ... trackedEntityFields
    ... claimFields
  }

  createDeclaration
  (
    declaration: {
      kind: DECL
      date: "2024-12-09"
      title: "Test declaration"
      country: "GB"
      url: "http://domain.tld"
      signatories: "Adrian Price\nDemon Fiddler"
      notes: "Test notes"
    }
  )
  {
    id
    ... trackedEntityFields
    ... declarationFields
  }

	createJournal
  (
    journal: {
      title: "Test journal"
      abbreviation: "Tst J"
      notes: "Test notes"
      # publisherId: 0
    }
  )
  {
    id
    ... trackedEntityFields
    ... journalFields
  }

	createPerson
  (
    person: {
      rating:1
      title: "Mr"
      firstName: "Test"
      lastName: "User"
      checked:false
      published:false
      qualifications: "Test qualifications"
      notes: "Test notes"
    }
  )
  {
    id
    ... trackedEntityFields
    ... personFields
  }

	createPublisher
  (
    publisher: {
      name: "Test publisher"
      location: "Test location"
      country: "GB"
      url: "http://test-domain.tld"
    }
  )
  {
    id
    ... trackedEntityFields
    ... publicationFields
  }

	createPublication
  (
    publication: {
      title: "Test publisher"
      kind:JOUR
      cached:false
      peerReviewed:false
      authorNames: "John Smith\nFred Bloggs"
      abstract: "Test abstract"
      url: "http://test-domain.tld"
      notes: "Test notes"
    }
  )
  {
    id
    ... trackedEntityFields
    ... publicationFields
  }

	createQuotation
  (
    quotation: {
      date: "2025-02-17"
      text: "Test quotation"
      quotee: "Fred Bloggs"
      url: "http://test-domain.tld"
      notes: "Test notes"
    }
  )
  {
    id
    ... trackedEntityFields
    ... topicFields
  }

  createTopic
  (
    topic: {
      label: "Test parent topic"
      description: "Test description"
    }
  )
  {
    id
    ... trackedEntityFields
    ... topicFields
  }

  createTopic
  (
    topic: {
      label: "Test child topic"
      description: "Test description"
      parentId: 69
    }
  )
  {
    id
    ... trackedEntityFields
    ... topicFields
  }

  # TO LINK ENTITIES:
  linkTopicToClaim: createEntityLink
  (
    link: {
      fromEntityId: 69
      toEntityId: 5
      fromEntityLocations: "Test Topic"
      toEntityLocations: "Test Claim"
    }
  )
  {
    id
    ... entityLinkFields
    ... trackedEntityFields
  }

  linkTopicToDeclaration: createEntityLink
  (
    link: {
      fromEntityId: 101
      toEntityId: 6
      fromEntityLocations: "Test Topic"
      toEntityLocations: "Test Declaration"
    }
  )
  {
    id
    ... entityLinkFields
    ... trackedEntityFields
  }

  linkClaimToDeclaration: createEntityLink
  (
    link: {
      fromEntityId: 5
      toEntityId: 6
      fromEntityLocations: "Test Claim"
      toEntityLocations: "Test Declaration"
    }
  )
  {
    id
    ... entityLinkFields
    ... trackedEntityFields
  }

  linkClaimToPerson: createEntityLink
  (
    link: {
      fromEntityId: 5
      toEntityId: 12
      fromEntityLocations: "Test Claim"
      toEntityLocations: "Test Person"
    }
  )
  {
    id
    ... entityLinkFields
    ... trackedEntityFields
  }

  linkDeclarationToPerson: createEntityLink
  (
    link: {
      fromEntityId: 6
      toEntityId: 12
      fromEntityLocations: "Test Declaration"
      toEntityLocations: "Test Person"
    }
  )
  {
    id
    ... entityLinkFields
    ... trackedEntityFields
  }

  linkDeclarationToQuotation: createEntityLink
  (
    link: {
      fromEntityId: 6
      toEntityId: 43
      fromEntityLocations: "Test Declaration"
      toEntityLocations: "Test Quotation"
    }
  )
  {
    id
    ... entityLinkFields
    ... trackedEntityFields
  }

  linkPublicationToPerson: createEntityLink
  (
    link: {
      fromEntityId: 42
      toEntityId: 12
      fromEntityLocations: "Test Publication"
      toEntityLocations: "Test Person"
    }
  )
  {
    id
    ... entityLinkFields
    ... trackedEntityFields
  }

  linkQuotationToPerson: createEntityLink
  (
    link: {
      fromEntityId: 43
      toEntityId: 12
      fromEntityLocations: "Test Quotation"
      toEntityLocations: "Test Person"
    }
  )
  {
    id
    ... entityLinkFields
    ... trackedEntityFields
  }

  linkQuotationToPublication: createEntityLink
  (
    link: {
      fromEntityId: 43
      toEntityId: 42
      fromEntityLocations: "Test Quotation"
      toEntityLocations: "Test Publication"
    }
  )
  {
    id
    ... entityLinkFields
    ... trackedEntityFields
  }

  updateClaim
  (
    claim: {
      id: 1
      text: "Test claim"
      date: "2024-11-18"
      notes: "UPDATED: Testing the mutation update claim API"
    }
  )
  {
    id
    text
    notes
    status
    created
    createdByUser {
      firstName
      lastName
    }
    log {
      content {
        timestamp
        transactionKind
        user {
          firstName
          lastName
        }
      }
    }
  }
}